{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/MonthlyReport/MonthlyReport.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { notesService } from '../../services/notesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MonthlyReport = () => {\n  _s();\n\n  // const user = JSON.parse(localStorage.getItem('user'));\n  // const userId = user.id;\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    notesService.getReport('4').then(response => {\n      console.log(response);\n      setNotes(response);\n      setIsLoading(false);\n    }).catch(err => {\n      console.log(err);\n    }); // [\n    //     { id: 1, desc: 'I felt sad', emotion: 2, date: '2022-02-10' },\n    //     { id: 2, desc: 'I felt happy', emotion: 5, date: '2022-01-23' }\n    // ]\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Monthly report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: notes.map((note, i) => /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: note.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MonthlyReport, \"9T+xxmavOUNTVgMc5YR3leXW8ms=\");\n\n_c = MonthlyReport;\nexport default MonthlyReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyReport\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/MonthlyReport/MonthlyReport.jsx"],"names":["useState","useEffect","notesService","MonthlyReport","notes","setNotes","isLoading","setIsLoading","getReport","then","response","console","log","catch","err","map","note","i","description","emoji"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB;AACA;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAL,IAAAA,YAAY,CAACM,SAAb,CAAuB,GAAvB,EACKC,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,QAAQ,CAACK,QAAD,CAAR;AACAH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALL,EAMKM,KANL,CAMWC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KARL,EAHY,CAYR;AACA;AACA;AACA;AAEP,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACI;AAAA,eACKR,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEK,CAACA,SAAD,iBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,kBACKF,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACP;AAAA,kCACI;AAAA,sBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAcF,CAAd;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA,kBADJ;AAqBH,CA/CD;;GAAMd,a;;KAAAA,a;AAiDN,eAAeA,aAAf","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { notesService } from '../../services/notesService';\n\nconst MonthlyReport = () => {\n    // const user = JSON.parse(localStorage.getItem('user'));\n    // const userId = user.id;\n\n    const [notes, setNotes] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        notesService.getReport('4')\n            .then(response => {\n                console.log(response);\n                setNotes(response);\n                setIsLoading(false);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            // [\n            //     { id: 1, desc: 'I felt sad', emotion: 2, date: '2022-02-10' },\n            //     { id: 2, desc: 'I felt happy', emotion: 5, date: '2022-01-23' }\n            // ]\n\n    }, []);\n\n    return (\n        <>  \n            {isLoading && <p>Loading...</p>}\n            {!isLoading && \n                <section>\n                    <h1>Monthly report</h1>\n\n                    <article>\n                        {notes.map((note, i) => \n                            <section key={i}>\n                                <p>{note.description}</p>    \n                                <p>{note.emoji}</p>\n                            </section>\n                        )}\n                    </article>\n                </section>\n            }   \n        \n        </>\n    )\n\n}\n\nexport default MonthlyReport;"]},"metadata":{},"sourceType":"module"}