{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/MonthlyReport/MonthlyReport.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { notesService } from '../../services/notesService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MonthlyReport = () => {\n  _s();\n\n  const user = JSON.parse(localStorage.getItem('user'));\n  const userId = user.id;\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(async () => {\n    setIsLoading(true);\n\n    try {\n      const response = await notesService.getReport(userId); // [\n      //     { id: 1, desc: 'I felt sad', emotion: 2, date: '2022-02-10' },\n      //     { id: 2, desc: 'I felt happy', emotion: 5, date: '2022-01-23' }\n      // ]\n\n      console.log(response);\n      setNotes(response);\n      setIsLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 27\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Monthly report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(MonthlyReport, \"9T+xxmavOUNTVgMc5YR3leXW8ms=\");\n\n_c = MonthlyReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"MonthlyReport\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/MonthlyReport/MonthlyReport.jsx"],"names":["useState","useEffect","notesService","MonthlyReport","user","JSON","parse","localStorage","getItem","userId","id","notes","setNotes","isLoading","setIsLoading","response","getReport","console","log","err","map","note","description"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMC,MAAM,GAAGL,IAAI,CAACM,EAApB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,YAAY;AAClBa,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AAEA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMb,YAAY,CAACc,SAAb,CAAuBP,MAAvB,CAAvB,CADA,CAEA;AACA;AACA;AACA;;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAH,MAAAA,QAAQ,CAACG,QAAD,CAAR;AAEAD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAVD,CAUE,OAAOK,GAAP,EAAY;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH;AACJ,GAhBQ,EAgBN,CAACV,MAAD,CAhBM,CAAT;AAkBA,sBACI;AAAA,eACKI,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEK,CAACA,SAAD,iBACG;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,kBACKF,KAAK,CAACS,GAAN,CAAUC,IAAI,iBACX;AAAA,oBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA,kBADJ;AAkBH,CA3CD;;GAAMnB,a;;KAAAA,a","sourcesContent":["import { useState } from 'react';\nimport { useEffect } from 'react';\nimport { notesService } from '../../services/notesService';\n\nconst MonthlyReport = () => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    const userId = user.id;\n\n    const [notes, setNotes] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(async () => {\n        setIsLoading(true);\n\n        try {\n            const response = await notesService.getReport(userId);\n            // [\n            //     { id: 1, desc: 'I felt sad', emotion: 2, date: '2022-02-10' },\n            //     { id: 2, desc: 'I felt happy', emotion: 5, date: '2022-01-23' }\n            // ]\n            console.log(response);\n            setNotes(response);\n\n            setIsLoading(false);\n        } catch (err) {\n            console.log(err);\n        }\n    }, [userId]);\n\n    return (\n        <>  \n            {isLoading && <p>Loading...</p>}\n            {!isLoading && \n                <section>\n                    <h1>Monthly report</h1>\n\n                    <article>\n                        {notes.map(note => \n                            <p>{note.description}</p>    \n                        )}\n                    </article>\n                </section>\n            }   \n        \n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}