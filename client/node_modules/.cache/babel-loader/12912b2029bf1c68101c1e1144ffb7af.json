{"ast":null,"code":"import { baseUrl } from \"../constants\";\n\nconst register = async (data, avatar) => {\n  if (data.password != data.repeatPassword) {\n    throw new Error('Passwords must match!');\n  }\n\n  const reqBody = {\n    username: data.username,\n    password: data.password,\n    profile: {\n      parent_email: data.parentEmail,\n      avatar: Number(avatar)\n    }\n  };\n  console.log(reqBody); // const response = await fetch(`${baseUrl}/auth/register/`, {\n  //     method: 'POST',\n  //     body: JSON.stringify(reqBody),\n  //     headers: {\n  //         'Content-Type': 'application/json'\n  //     }\n  // });\n  // const responseData = await response.json();\n  // localStorage.setItem('user', JSON.stringify(responseData));\n  // if (!response.ok) {\n  //     throw new Error(responseData);\n  // }\n  // return responseData;\n};\n\nconst login = async data => {\n  const response = await fetch(`${baseUrl}/auth/login/`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const responseData = await response.json();\n\n  if (!response.ok) {\n    throw new Error(responseData);\n  }\n\n  localStorage.setItem('user', JSON.stringify(responseData));\n  return responseData;\n};\n\nexport const authService = {\n  register,\n  login\n};","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/services/authService.js"],"names":["baseUrl","register","data","avatar","password","repeatPassword","Error","reqBody","username","profile","parent_email","parentEmail","Number","console","log","login","response","fetch","method","body","JSON","stringify","headers","responseData","json","ok","localStorage","setItem","authService"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAaC,MAAb,KAAwB;AACrC,MAAID,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACG,cAA1B,EAA0C;AACtC,UAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AAED,QAAMC,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QADH;AAEZJ,IAAAA,QAAQ,EAAEF,IAAI,CAACE,QAFH;AAGZK,IAAAA,OAAO,EAAE;AAAEC,MAAAA,YAAY,EAAER,IAAI,CAACS,WAArB;AAAkCR,MAAAA,MAAM,EAAES,MAAM,CAACT,MAAD;AAAhD;AAHG,GAAhB;AAMAU,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAXqC,CAarC;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACH,CA9BD;;AAgCA,MAAMQ,KAAK,GAAG,MAAOb,IAAP,IAAgB;AAC1B,QAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEjB,OAAQ,cAAZ,EAA2B;AACnDkB,IAAAA,MAAM,EAAE,MAD2C;AAEnDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAenB,IAAf,CAF6C;AAGnDoB,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAH0C,GAA3B,CAA5B;AAQA,QAAMC,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B;;AAEA,MAAI,CAACR,QAAQ,CAACS,EAAd,EAAkB;AACd,UAAM,IAAInB,KAAJ,CAAUiB,YAAV,CAAN;AACH;;AAEDG,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BP,IAAI,CAACC,SAAL,CAAeE,YAAf,CAA7B;AACA,SAAOA,YAAP;AACH,CAjBD;;AAmBA,OAAO,MAAMK,WAAW,GAAG;AAAE3B,EAAAA,QAAF;AAAYc,EAAAA;AAAZ,CAApB","sourcesContent":["import { baseUrl } from \"../constants\";\n\nconst register = async (data, avatar) => {\n    if (data.password != data.repeatPassword) {\n        throw new Error('Passwords must match!');\n    }\n\n    const reqBody = { \n        username: data.username, \n        password: data.password, \n        profile: { parent_email: data.parentEmail, avatar: Number(avatar) }\n    };\n\n    console.log(reqBody);\n\n    // const response = await fetch(`${baseUrl}/auth/register/`, {\n    //     method: 'POST',\n    //     body: JSON.stringify(reqBody),\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     }\n    // });\n\n\n    // const responseData = await response.json();\n    // localStorage.setItem('user', JSON.stringify(responseData));\n\n    // if (!response.ok) {\n    //     throw new Error(responseData);\n    // }\n\n    // return responseData;\n}\n\nconst login = async (data) => {\n    const response = await fetch(`${baseUrl}/auth/login/`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    const responseData = await response.json();\n\n    if (!response.ok) {\n        throw new Error(responseData);\n    }\n\n    localStorage.setItem('user', JSON.stringify(responseData));\n    return responseData;\n}\n\nexport const authService = { register, login };"]},"metadata":{},"sourceType":"module"}