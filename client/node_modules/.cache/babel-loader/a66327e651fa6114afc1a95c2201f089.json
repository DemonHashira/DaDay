{"ast":null,"code":"import { baseUrl } from \"../constants\";\n\nconst getReport = async userId => {\n  const response = await fetch(`${baseUrl}/notes/${userId}`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data);\n  }\n\n  return data;\n};\n\nconst getNote = async (userId, noteId) => {\n  const response = await fetch(`${baseUrl}/notes/${userId}/${noteId}`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data);\n  }\n\n  return data;\n};\n\nconst getOne = async user => {\n  const response = await fetch(`${baseUrl}/share-day/${user.user_id}`, {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data);\n  }\n\n  return data;\n};\n\nconst createOne = async (user, data) => {\n  const response = await fetch(`${baseUrl}/share-day/${user.user_id}`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error(data);\n  }\n\n  return {\n    status: 'success'\n  };\n};\n\nexport const notesService = {\n  getReport,\n  getOne,\n  createOne,\n  getNote\n};","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/services/notesService.js"],"names":["baseUrl","getReport","userId","response","fetch","data","json","ok","Error","getNote","noteId","getOne","user","user_id","headers","createOne","method","body","JSON","stringify","status","notesService"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAChC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,UAASE,MAAO,EAA5B,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAUH,IAAV,CAAN;AACH;;AAED,SAAOA,IAAP;AACH,CATD;;AAWA,MAAMI,OAAO,GAAG,OAAOP,MAAP,EAAeQ,MAAf,KAA0B;AACtC,QAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,UAASE,MAAO,IAAGQ,MAAO,EAAtC,CAA5B;AACA,QAAML,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAUH,IAAV,CAAN;AACH;;AAED,SAAOA,IAAP;AACH,CATD;;AAWA,MAAMM,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC3B,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,cAAaY,IAAI,CAACC,OAAQ,EAAtC,EAAyC;AACjEC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADwD,GAAzC,CAA5B;AAKA,QAAMT,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAUH,IAAV,CAAN;AACH;;AAED,SAAOA,IAAP;AACH,CAbD;;AAeA,MAAMU,SAAS,GAAG,OAAOH,IAAP,EAAaP,IAAb,KAAsB;AACpC,QAAMF,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,cAAaY,IAAI,CAACC,OAAQ,EAAtC,EAAyC;AACjEG,IAAAA,MAAM,EAAE,MADyD;AAEjEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,IAAf,CAF2D;AAGjES,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AAHwD,GAAzC,CAA5B;;AAQA,MAAI,CAACX,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAUH,IAAV,CAAN;AACH;;AAED,SAAO;AAAEe,IAAAA,MAAM,EAAE;AAAV,GAAP;AACH,CAdD;;AAgBA,OAAO,MAAMC,YAAY,GAAG;AAAEpB,EAAAA,SAAF;AAAaU,EAAAA,MAAb;AAAqBI,EAAAA,SAArB;AAAgCN,EAAAA;AAAhC,CAArB","sourcesContent":["import { baseUrl } from \"../constants\";\n\nconst getReport = async (userId) => {\n    const response = await fetch(`${baseUrl}/notes/${userId}`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    return data;\n}\n\nconst getNote = async (userId, noteId) => {\n    const response = await fetch(`${baseUrl}/notes/${userId}/${noteId}`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    return data;\n}\n\nconst getOne = async (user) => {\n    const response = await fetch(`${baseUrl}/share-day/${user.user_id}`, {\n        headers: { \n            'Content-Type': 'application/json'\n        }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    return data;\n}\n\nconst createOne = async (user, data) => {\n    const response = await fetch(`${baseUrl}/share-day/${user.user_id}`, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    return { status: 'success' };\n}\n\nexport const notesService = { getReport, getOne, createOne, getNote };"]},"metadata":{},"sourceType":"module"}