{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport './CreateNote.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNote = () => {\n  _s();\n\n  const [question, setQuestion] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [emotion, setEmotion] = useState(null);\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    mode: 'onSubmit',\n    reValidateMode: 'onChange'\n  });\n  const navigate = useNavigate();\n  const emotions = {\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-1_vxvybb.png': 1,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-2_ticimn.png': 2,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-3_tbsyae.png': 3,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-4_u2vxbg.png': 4,\n    'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-5_zhqikx.png': 5\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    notesService.getOne(user).then(response => {\n      setQuestion(response.question);\n      setIsLoading(false);\n    });\n  }, [user.user_id]);\n\n  const sendAnswer = data => {\n    notesService.createOne(user, {\n      avatar: emotion,\n      text: data.description\n    }).then(response => {\n      if (response.status == 'success') {\n        navigate('/register');\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this), !isLoading && !emotion && /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"flex flex-col items-center mt-28\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-8xl my-10 text-center\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"flex mt-10\",\n        children: Object.entries(emotions).map((kvp, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n          onClick: () => setEmotion(kvp[1]),\n          src: kvp[0],\n          className: \"emotion-card w-36 h-36 mx-5 rounded-3xl\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 63\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), !isLoading && emotion && /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"flex flex-col items-center mt-28\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-8xl my-10 text-center\",\n        children: \"Why do you feel this way?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(sendAnswer),\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...register('description', {\n            required: {\n              value: true\n            }\n          }),\n          name: \"description\",\n          type: \"text\",\n          className: \"mt-20 w-96 h-40 bg-transparent border-2 border-orange-200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateNote, \"aLsGkSmSh9zPM8yHWuE0gYTYpaw=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote.jsx"],"names":["useEffect","useState","notesService","useForm","useNavigate","CreateNote","question","setQuestion","isLoading","setIsLoading","emotion","setEmotion","user","localStorage","getItem","JSON","parse","register","formState","errors","handleSubmit","mode","reValidateMode","navigate","emotions","getOne","then","response","user_id","sendAnswer","data","createOne","avatar","text","description","status","catch","err","console","log","Object","entries","map","kvp","i","required","value"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\n\nimport './CreateNote.css';\n\nconst CreateNote = () => {\n    const [question, setQuestion] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [emotion, setEmotion] = useState(null);\n\n    const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: 'onSubmit', reValidateMode: 'onChange' });\n\n    const navigate = useNavigate();\n    \n    const emotions = { \n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-1_vxvybb.png': 1,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-2_ticimn.png': 2,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-3_tbsyae.png': 3,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-4_u2vxbg.png': 4,\n        'https://res.cloudinary.com/drinka/image/upload/v1648927369/da-day/emotions/emotion-5_zhqikx.png': 5\n    };\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        notesService.getOne(user)\n            .then(response => {\n                setQuestion(response.question);\n                setIsLoading(false);\n            })\n    }, [user.user_id]);\n\n    const sendAnswer = (data) => {\n        notesService.createOne(user, { avatar: emotion, text: data.description })\n            .then(response => {\n                if (response.status == 'success') {\n                    navigate('/register');\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    } \n\n    return (\n        <section className=\"flex flex-col items-center justify-center\">\n            {isLoading && <p>Loading ...</p>}\n            {!isLoading && !emotion &&\n                <article className=\"flex flex-col items-center mt-28\">\n                    <h1 className=\"text-8xl my-10 text-center\">{question}</h1>\n                    <section className=\"flex mt-10\">\n                    {Object.entries(emotions).map((kvp, i) => <img key={i} onClick={() => setEmotion(kvp[1])} src={kvp[0]} className=\"emotion-card w-36 h-36 mx-5 rounded-3xl\"/>)}\n                    </section>\n                </article>\n            }\n\n            {!isLoading && emotion &&\n                <article className=\"flex flex-col items-center mt-28\">\n                    <h1 className=\"text-8xl my-10 text-center\">Why do you feel this way?</h1>\n                    \n                    <form onSubmit={handleSubmit(sendAnswer)} className=\"flex flex-col\">\n                        <textarea {...register('description', { required: { value: true } })} name=\"description\" type=\"text\" className=\"mt-20 w-96 h-40 bg-transparent border-2 border-orange-200\" />\n                        <input type=\"submit\" value=\"Send Answer\" />\n                    </form>\n                </article>\n            }\n        </section>\n    );\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}