{"ast":null,"code":"import { baseUrl } from \"../constants\";\n\nconst getReport = async userId => {\n  const response = await fetch(`${baseUrl}/notes/${userId}`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data);\n  } // [\n  //     { id: 1, desc: 'I felt sad', emotion: 2, date: '2022-02-10' },\n  //     { id: 2, desc: 'I felt happy', emotion: 5, date: '2022-01-23' }\n  // ]\n\n\n  return data;\n};\n\nconst getOne = async user => {\n  const response = await fetch(`${baseUrl}/share-day/${user.user_id}`, {\n    headers: {\n      'Authorization': `Token ${user.token}}`,\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data);\n  }\n\n  return data;\n};\n\nexport const notesService = {\n  getReport,\n  getOne\n};","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/services/notesService.js"],"names":["baseUrl","getReport","userId","response","fetch","data","json","ok","Error","getOne","user","user_id","headers","token","notesService"],"mappings":"AAAA,SAASA,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAChC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,UAASE,MAAO,EAA5B,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAUH,IAAV,CAAN;AACH,GAN+B,CAQhC;AACA;AACA;AACA;;;AACA,SAAOA,IAAP;AACH,CAbD;;AAeA,MAAMI,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAC3B,QAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,OAAQ,cAAaU,IAAI,CAACC,OAAQ,EAAtC,EAAyC;AAEjEC,IAAAA,OAAO,EAAE;AACL,uBAAkB,SAAQF,IAAI,CAACG,KAAM,GADhC;AAEL,sBAAgB;AAFX;AAFwD,GAAzC,CAA5B;AAOA,QAAMR,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAUH,IAAV,CAAN;AACH;;AAED,SAAOA,IAAP;AACH,CAfD;;AAiBA,OAAO,MAAMS,YAAY,GAAG;AAAEb,EAAAA,SAAF;AAAaQ,EAAAA;AAAb,CAArB","sourcesContent":["import { baseUrl } from \"../constants\";\n\nconst getReport = async (userId) => {\n    const response = await fetch(`${baseUrl}/notes/${userId}`);\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    // [\n    //     { id: 1, desc: 'I felt sad', emotion: 2, date: '2022-02-10' },\n    //     { id: 2, desc: 'I felt happy', emotion: 5, date: '2022-01-23' }\n    // ]\n    return data;\n}\n\nconst getOne = async (user) => {\n    const response = await fetch(`${baseUrl}/share-day/${user.user_id}`, {\n\n        headers: { \n            'Authorization': `Token ${user.token}}`,\n            'Content-Type': 'application/json'\n        }\n    });\n    const data = await response.json();\n\n    if (!response.ok) {\n        throw new Error(data);\n    }\n\n    return data;\n}\n\nexport const notesService = { getReport, getOne };"]},"metadata":{},"sourceType":"module"}