{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateNote = () => {\n  _s();\n\n  const [question, setQuestion] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    mode: 'onSubmit',\n    reValidateMode: 'onChange'\n  });\n  useEffect(() => {\n    setIsLoading(true);\n    notesService.getOne(user).then(response => {\n      setQuestion(response.question);\n      setIsLoading(false);\n    });\n  }, [user.user_id]);\n\n  const sendAnswer = data => {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col items-center justify-center\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading ...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 27\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"article\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-8xl mt-10\",\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(sendAnswer),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register('answer', {\n            required: {\n              value: true,\n              message: 'Your answer is required!'\n            }\n          }),\n          name: \"answer\",\n          type: \"text\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateNote, \"cn5a8GqR0dUeppY6DgE5l9GEnEw=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateNote;\nexport default CreateNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"sources":["/Users/alexandrinamehandzhiyska/Documents/alex/education/projects/da-day/DaDay/client/src/components/Notes/CreateNote.jsx"],"names":["useEffect","useState","notesService","useForm","CreateNote","question","setQuestion","isLoading","setIsLoading","user","localStorage","getItem","JSON","parse","register","formState","errors","handleSubmit","mode","reValidateMode","getOne","then","response","user_id","sendAnswer","data","console","log","required","value","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,iBAAxB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAMQ,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,IAAvF;AACA,QAAM;AAAEG,IAAAA,QAAF;AAAYC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAAvB;AAAmCC,IAAAA;AAAnC,MAAoDd,OAAO,CAAC;AAAEe,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,cAAc,EAAE;AAApC,GAAD,CAAjE;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAN,IAAAA,YAAY,CAACkB,MAAb,CAAoBX,IAApB,EACKY,IADL,CACUC,QAAQ,IAAI;AACdhB,MAAAA,WAAW,CAACgB,QAAQ,CAACjB,QAAV,CAAX;AACAG,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAJL;AAKH,GARQ,EAQN,CAACC,IAAI,CAACc,OAAN,CARM,CAAT;;AAUA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,GAFD;;AAIA,sBACI;AAAS,IAAA,SAAS,EAAC,2CAAnB;AAAA,eACKlB,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEK,CAACA,SAAD,iBACG;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCF;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAM,QAAA,QAAQ,EAAEY,YAAY,CAACO,UAAD,CAA5B;AAAA,gCACI,sBAAWV,QAAQ,CAAC,QAAD,EAAW;AAAEc,YAAAA,QAAQ,EAAE;AAAEC,cAAAA,KAAK,EAAE,IAAT;AAAeC,cAAAA,OAAO,EAAE;AAAxB;AAAZ,WAAX,CAAnB;AAAmG,UAAA,IAAI,EAAC,QAAxG;AAAiH,UAAA,IAAI,EAAC,MAAtH;AAA6H,UAAA,SAAS,EAAC;AAAvI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArCD;;GAAM1B,U;UAKwDD,O;;;KALxDC,U;AAuCN,eAAeA,UAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { notesService } from \"../../services/notesService\";\nimport { useForm } from \"react-hook-form\";\n\nconst CreateNote = () => {\n    const [question, setQuestion] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n    const { register, formState: { errors }, handleSubmit } = useForm({ mode: 'onSubmit', reValidateMode: 'onChange' });\n\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        notesService.getOne(user)\n            .then(response => {\n                setQuestion(response.question);\n                setIsLoading(false);\n            })\n    }, [user.user_id]);\n\n    const sendAnswer = (data) => {\n        console.log(data);\n    }\n\n    return (\n        <section className=\"flex flex-col items-center justify-center\">\n            {isLoading && <p>Loading ...</p>}\n            {!isLoading && \n                <article>\n                    <h1 className=\"text-8xl mt-10\">{question}</h1>\n                    \n                    <form onSubmit={handleSubmit(sendAnswer)}>\n                        <input {...register('answer', { required: { value: true, message: 'Your answer is required!' } })} name=\"answer\" type=\"text\" className=\"form-input\" />\n                        <input type=\"submit\" value=\"Send Answer\" />\n                    </form>\n                </article>\n            }\n        </section>\n    );\n}\n\nexport default CreateNote;"]},"metadata":{},"sourceType":"module"}